version: '3.8'

services:
  #database section

  #orderdb: sql server
  orderdb:
    container_name: orderdb
    environment:
      SA_PASSWORD: "Passw0rd!"
      ACCEPT_EULA: "Y"
    restart: always
    volumes:
      - sqlserver_data:/var/opt/mssql
    ports:
      - "1435:1433"

  #productdb: msql
  productdb:
    container_name: productdb
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: "Passw0rd!"
      MYSQL_TCP_PORT: 3306
      MYSQL_DATABASE: ProductDB
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"

  #customerdb: postgres
  customerdb:
    container_name: customerdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=CustomerDb
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  #basketdb: redis
  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"
  
  #inventorydb: mongo
  inventorydb:
    container_name: inventorydb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
  
  #  #hangfiredb: mongo
  hangfiredb:
    container_name: hangfiredb
    ports:
      - "27018:27017"
    volumes:
      - hangfire_mongo_data:/data/db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'admin'
      MONGO_INITDB_ROOT_PASSWORD: 'admin'
  
  #infrastructure section
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    hostname: rabbitmq

  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@tedu.com.vn
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
  
  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  
  elasticsearch:
    container_name: elasticsearch
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - xpack.security.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      #      - ELASTIC_USERNAME=elastic #default username
      - ELASTIC_PASSWORD=admin
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
  
  kibana:
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=admin
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    
    #microservices api section
    # product.api:
    #  container_name: product.api
    #  environment:
    #    - ASPNETCORE_ENVIRONMENT=Development
    #    - ASPNETCORE_URLS=http://+:80
    #    - "ConnectionStrings:DefaultConnectionString=Server=productdb;Port=3306;Database=ProductDB;Uid=root;Pwd=Passw0rd!"
    #  depends_on:
    #    - productdb
    #  ports:
    #    - "6002:80"
    #  restart: always
    
    # customer.api:
    #  container_name: customer.api
    #  environment:
    #    - ASPNETCORE_ENVIRONMENT=Development
    #    - ASPNETCORE_URLS=http://+:80
    #    - "ConnectionStrings:DefaultConnectionString=Server=customerdb;Port=5432;Database=CustomerDb;User Id=admin;Password=admin1234"
    #    - "HangFireSettings:Storage:ConnectionString=Server=customerdb;Port=5432;Database=CustomerDb;User Id=admin;Password=admin1234"
    #  depends_on:
    #    - customerdb
    #  ports:
    #    - "6003:80"
    #  restart: always
    
    # basket.api:
    #  container_name: basket.api
    #  environment:
    #    - ASPNETCORE_ENVIRONMENT=Development
    #    - ASPNETCORE_URLS=http://+:80
    #    - "CacheSettings:ConnectionString=basketdb:6379"
    #    - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    #    - "GrpcSettings:StockUrl=http://inventory.grpc"
    #    - "UrlSettings:ApiGwUrl=http://apigw.ocelot"
    #    - "UrlSettings:HangfireUrl=http://hangfire.api"
    #  depends_on:
    #    - basketdb
    #    - rabbitmq
    #  ports:
    #    - "6004:80"
    #  restart: always
    
    # order.api:
    #  container_name: order.api
    #  environment:
    #    - ASPNETCORE_ENVIRONMENT=Development
    #    - ASPNETCORE_URLS=http://+:80
    #    - "ConnectionStrings:DefaultConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=Passw0rd!;Multipleactiveresultsets=true"
    #    - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    #  depends_on:
    #    - orderdb
    #    - rabbitmq
    #  ports:
    #    - "6005:80"
    #  restart: always
    
    # inventory.product.api:
    #  container_name: inventory.product.api
    #  environment:
    #    - ASPNETCORE_ENVIRONMENT=Development
    #    - ASPNETCORE_URLS=http://+:80
    #    - "MongoDbSettings:ConnectionString=mongodb://inventorydb:27017"
    #    - "MongoDbSettings:DatabaseName=InventoryDb"
    #  depends_on:
    #    - inventorydb
    #  ports:
    #    - "6006:80"
    #  restart: always
    
    # inventory.grpc:
    #  container_name: inventory.grpc
    #  environment:
    #    - ASPNETCORE_ENVIRONMENT=Development
    #    - ASPNETCORE_URLS=http://+:80
    #    - "MongoDbSettings:ConnectionString=mongodb://inventorydb:27017"
    #    - "MongoDbSettings:DatabaseName=InventoryDb"
    #  depends_on:
    #    - inventorydb
    #  ports:
    #    - "6007:80"
    #  restart: always
    
    # apigw.ocelot:
    #  container_name: apigw.ocelot
    #  environment:
    #    - ASPNETCORE_ENVIRONMENT=Local
    #    - ASPNETCORE_URLS=http://+:80
    #    - "GlobalConfiguration:BaseUrl=http://apigw.ocelot"
    #  depends_on:
    #    - product.api
    #    - customer.api
    #    - basket.api
    #    - order.api
    #    - inventory.product.api
    #  ports:
    #    - "6001:80"
    #  restart: always
    
    # hangfire.api:
    #  container_name: hangfire.api
    #  environment:
    #    - ASPNETCORE_ENVIRONMENT=Local
    #    - ASPNETCORE_URLS=http://+:80
    #    - "HangFireSettings:Storage:ConnectionString=mongodb://admin:admin@hangfiredb/hangfire-webapi?authSource=admin"
    #  depends_on:
    #    - hangfiredb
    #  ports:
    #    - "6008:80"
    #  restart: always
    